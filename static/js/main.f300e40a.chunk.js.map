{"version":3,"sources":["components/Contacts/Contacts.module.css","icons/delete.svg","redux/contacts/contacts-actions.js","components/Contacts/ContactForm.js","components/Contacts/Filter.js","components/Contacts/ContactList.js","App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js"],"names":["module","exports","_path","_path2","submit","createAction","changeFilter","deleteContacts","ContactForm","state","name","number","addList","contact","id","shortid","generate","setState","prevState","contacts","loginInputId","handleInputChange","evt","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","contactsBlock","this","formName","input","type","onChange","pattern","title","required","button","Component","connect","dispatch","contactsActions","filter","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","svgRef","titleId","xmlns","viewBox","ref","d","fill","ForwardRef","getVisibleContacts","items","filterLowerCase","toLowerCase","includes","contactList","onDeleteContact","contactId","map","contactItem","onClick","buttonDelete","width","height","App","createReducer","actions","payload","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReduser","devContacts","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f300e40a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Contacts_App__2a6Md\",\"input\":\"Contacts_input__3C6XV\",\"button\":\"Contacts_button__31JB2\",\"buttonDelete\":\"Contacts_buttonDelete__2XPJS\",\"contactsBlock\":\"Contacts_contactsBlock__S8zjA\",\"contactItem\":\"Contacts_contactItem__Wkfr_\"};","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.5575697b.svg\";\nexport { ForwardRef as ReactComponent };","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst submit = createAction(\"contacts/submit\");\r\n\r\nconst changeFilter = createAction(\"contacts/filter\");\r\n\r\nconst deleteContacts = createAction(\"contacts/delete\");\r\n\r\nexport default { submit, changeFilter, deleteContacts };\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  addList = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState((prevState) => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  loginInputId = shortid.generate();\r\n\r\n  handleInputChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({\r\n      id: shortid.generate(),\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.contactsBlock}>\r\n        <form onSubmit={this.handleSubmit} className={styles.formName}>\r\n          <label id={this.loginInputId}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type='text'\r\n              name='name'\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label id={this.loginInputId}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type='tel'\r\n              name='number'\r\n              value={this.state.number}\r\n              onChange={this.handleInputChange}\r\n              pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n              title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.button} type='submit'>\r\n            Add conract\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (contact) => dispatch(contactsActions.submit(contact)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={styles.contactsBlock}>\r\n    <label>\r\n      Find contact by name\r\n      <input\r\n        className={styles.input}\r\n        type='text'\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (evt) =>\r\n    dispatch(contactsActions.changeFilter(evt.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport styles from \"./Contacts.module.css\";\r\nimport { ReactComponent as CloseIcon } from \"../../icons/delete.svg\";\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => (\r\n  <>\r\n    <ul className={styles.contactsBlock}>\r\n      {contactList.map(({ name, number, id }) => (\r\n        <li className={styles.contactItem} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            onClick={() => onDeleteContact(id)}\r\n            className={styles.buttonDelete}\r\n            aria-label='Видалити контакт'\r\n          >\r\n            <CloseIcon width='20' height='20' fill='#fff' />\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (filter, items) => {\r\n  const filterLowerCase = filter.toLowerCase();\r\n  return items.filter(({ name }) =>\r\n    name.toLowerCase().includes(filterLowerCase)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter, items } }) => ({\r\n  contactList: getVisibleContacts(filter, items),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (contactId) =>\r\n    dispatch(contactsActions.deleteContacts(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import ContactForm from \"./components/Contacts/ContactForm\";\n// import Filter from \"./components/Contacts/Filter\";\n// import ContactList from \"./components/Contacts/ContactList\";\n// import *as actions from './redux/contacts/contacts-actions';\n// import styles from \"./components/Contacts/Contacts.module.css\";\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n// componentDidMount() {\n//   const contacts = localStorage.getItem(\"contacts\");\n//     const parsedContacts = JSON.parse(contacts);\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   formSubmitHandler = (contact) => {\n//     const { contacts } = this.state;\n//     const names = contacts.map((contact) => contact.name);\n//     names.includes(contact.name)\n//       ? alert(`${contact.name} is already in contacts.`)\n//       : this.setState((prevState) => ({\n//           contacts: [contact, ...prevState.contacts],\n//         }));\n//   };\n\n//   changeFilter = (evt) => {\n//     this.setState({ filter: evt.currentTarget.value });\n//   };\n\n//   getVisibleContacts = () => {\n//     const { filter, contacts } = this.state;\n//     const filterLowerCase = filter.toLowerCase();\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(filterLowerCase)\n//     );\n//   };\n\n//   deleteContacts = (contactId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== contactId\n//       ),\n//     }));\n//   };\n\n//   render() {\n//     return (\n//       <div className={styles.App}>\n\n//         <h1>Phonebook</h1>\n//         <ContactForm onSubmit={this.formSubmitHandler} />\n//         <h2>Contacts</h2>\n//         <Filter value={this.state.filter} onChange={this.changeFilter} />\n//         <ContactList\n//           contactList={this.getVisibleContacts()}\n//           onDeleteContact={this.deleteContacts}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return{\n//     contacts: state.items,\n//     filter: state.filter,\n//   }\n// }\n// const mapDispatchToProps = dispatch => {\n//   return{\n//     formSubmitHandler: () => dispatch(actions.submit(this.state))\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n\nimport React, { Component } from \"react\";\nimport ContactForm from \"./components/Contacts/ContactForm\";\nimport Filter from \"./components/Contacts/Filter\";\nimport ContactList from \"./components/Contacts/ContactList\";\nimport styles from \"./components/Contacts/Contacts.module.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.App}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from './contacts-actions';\r\n\r\n\r\nconst items = createReducer([], {\r\n    [actions.submit]: (state, { payload }) => state.map(contact => contact.name).includes(payload.name)\r\n    ? alert(`${payload.name} is already in contacts.`)\r\n    : [payload, ...state],\r\n    [actions.deleteContacts]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n    // case types.SUBMIT:\r\n    //   // return [payload, ...state];\r\n    //   return state.map((contact) => contact.name).includes(payload.name)\r\n    //     ? alert(`${payload.name} is already in contacts.`)\r\n    //     : [payload, ...state];\r\n\r\n        \r\n\r\n    // case types.DELETE:\r\n    //   return state.filter(({ id }) => id !== payload);\r\n\r\n\r\n\r\n//     case types.MOUNT:\r\n//       return  JSON.parse(localStorage.getItem(\"contacts\")) && [\r\n//            JSON.parse(localStorage.getItem(\"contacts\"))]\r\n\r\n      \r\n\r\n//     case types.UPDATE:\r\n//       return state.contacts !== payload.contacts && [\r\n//           localStorage.setItem(\"contacts\", JSON.stringify(state.contacts)),\r\n//         ]\r\n    \r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReduser from \"./contacts/contacts-reduser\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: persistReducer(contactsPersistConfig, contactsReduser) },\r\n  middleware,\r\n  devContacts: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}